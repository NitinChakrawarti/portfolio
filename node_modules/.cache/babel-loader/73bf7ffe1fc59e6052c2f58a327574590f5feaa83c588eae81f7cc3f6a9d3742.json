{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csabh\\\\Desktop\\\\TermF\\\\Nitin-s-portfolio\\\\src\\\\compo\\\\animatedprogressbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimatedProgressBar = props => {\n  _s();\n  const {\n    ref,\n    inview\n  } = useInView();\n  const controls = useAnimation();\n  const percentage = props.progress;\n  useEffect(() => {\n    if (inview) {\n      console.log(percentage);\n      controls.start({\n        width: `${percentage}%`,\n        transition: {\n          duration: 1\n        }\n      });\n    }\n  }, [controls, inview, percentage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"csshillh3\",\n      children: props.skillname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        ref: ref,\n        animate: controls,\n        initial: {\n          width: 0\n        },\n        style: {\n          width: '0',\n          height: '100%',\n          backgroundColor: \"blue\",\n          display: 'flex',\n          justifyContent: \"end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AnimatedProgressBar, \"ALHx/nQ9R3O+hIQtxhn/HjeiJjc=\", false, function () {\n  return [useInView, useAnimation];\n});\n_c = AnimatedProgressBar;\nexport default AnimatedProgressBar;\nvar _c;\n$RefreshReg$(_c, \"AnimatedProgressBar\");","map":{"version":3,"names":["React","useEffect","motion","useAnimation","useInView","jsxDEV","_jsxDEV","Fragment","_Fragment","AnimatedProgressBar","props","_s","ref","inview","controls","percentage","progress","console","log","start","width","transition","duration","children","className","skillname","fileName","_jsxFileName","lineNumber","columnNumber","div","animate","initial","style","height","backgroundColor","display","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/csabh/Desktop/TermF/Nitin-s-portfolio/src/compo/animatedprogressbar.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\n\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst AnimatedProgressBar = (props) => {\r\n  const { ref, inview } = useInView()\r\n  const controls = useAnimation()\r\nconst percentage = props.progress \r\n  useEffect(() => {\r\n    if (inview) {\r\n        console.log(percentage)\r\n        controls.start({\r\n        width: `${percentage}%`,\r\n        transition: {\r\n          duration: 1\r\n        }\r\n      })\r\n    }\r\n  }, [controls, inview, percentage])\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"csshillh3\">{props.skillname}</h2>\r\n      <div className=\"progress-bar\">\r\n        <motion.div\r\n        ref={ref}\r\n        animate={controls}\r\n        initial={{width:0}}\r\n        style={{\r\n            width:'0',\r\n            height:'100%',\r\n            backgroundColor:\"blue\",\r\n            display:'flex',\r\n            justifyContent:\"end\",\r\n\r\n        }}\r\n        >\r\n          <span>{percentage}%</span>\r\n\r\n\r\n          </motion.div>\r\n        </div>\r\n        \r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedProgressBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,SAASC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AACpD,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC;EACnC,MAAMU,QAAQ,GAAGX,YAAY,CAAC,CAAC;EACjC,MAAMY,UAAU,GAAGL,KAAK,CAACM,QAAQ;EAC/Bf,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,EAAE;MACRI,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvBD,QAAQ,CAACK,KAAK,CAAC;QACfC,KAAK,EAAG,GAAEL,UAAW,GAAE;QACvBM,UAAU,EAAE;UACVC,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACR,QAAQ,EAAED,MAAM,EAAEE,UAAU,CAAC,CAAC;EAElC,oBACET,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAIkB,SAAS,EAAC,WAAW;MAAAD,QAAA,EAAEb,KAAK,CAACe;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChDvB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BjB,OAAA,CAACJ,MAAM,CAAC4B,GAAG;QACXlB,GAAG,EAAEA,GAAI;QACTmB,OAAO,EAAEjB,QAAS;QAClBkB,OAAO,EAAE;UAACZ,KAAK,EAAC;QAAC,CAAE;QACnBa,KAAK,EAAE;UACHb,KAAK,EAAC,GAAG;UACTc,MAAM,EAAC,MAAM;UACbC,eAAe,EAAC,MAAM;UACtBC,OAAO,EAAC,MAAM;UACdC,cAAc,EAAC;QAEnB,CAAE;QAAAd,QAAA,eAEAjB,OAAA;UAAAiB,QAAA,GAAOR,UAAU,EAAC,GAAC;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eAGR,CAAC;AAEP,CAAC;AAAClB,EAAA,CA1CIF,mBAAmB;EAAA,QACCL,SAAS,EAChBD,YAAY;AAAA;AAAAmC,EAAA,GAFzB7B,mBAAmB;AA4CzB,eAAeA,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}