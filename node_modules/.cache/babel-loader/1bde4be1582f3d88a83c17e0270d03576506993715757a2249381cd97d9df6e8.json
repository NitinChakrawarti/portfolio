{"ast":null,"code":"var _jsxFileName = \"N:\\\\react_learn\\\\react-projects\\\\sign-up\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [contact, setContact] = useState({\n    fname: \"\",\n    lname: \"\"\n  });\n  function inputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setContact(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Sign Up \", contact.fname, \" \", contact.lname, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"UserName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fname\",\n        placeholder: \"enter User name\",\n        onChange: inputChange,\n        value: contact.fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"PassWord\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"lname\",\n        placeholder: \"enter password \",\n        onChange: inputChange,\n        value: contact.lname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"R3aNhkrtXbGv0WCeuJsU52L+GqQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","contact","setContact","fname","lname","inputChange","event","name","value","target","prevValue","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["N:/react_learn/react-projects/sign-up/src/login.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nconst Login = () => {\r\n   const [contact, setContact]= useState({\r\n    fname:\"\",\r\n    lname:\"\",\r\n   })\r\n\r\n   function inputChange(event){ \r\n      const {name, value} =event.target;\r\n      setContact(prevValue=>{\r\n        return {\r\n          ...prevValue,\r\n          [name] :value,\r\n\r\n        }\r\n\r\n      })\r\n    }\r\n    \r\n       \r\n    return (\r\n     <>\r\n     <div className=\"head\">\r\n              <h1>Sign Up {contact.fname} {contact.lname} </h1>\r\n          </div>\r\n          <div className=\"body\">\r\n              <h3>UserName</h3>\r\n              <input type=\"text\"  name=\"fname\" placeholder='enter User name' onChange={inputChange} value={contact.fname}/>\r\n              <h3>PassWord</h3>\r\n              <input type=\"password\" name=\"lname\" placeholder='enter password ' onChange={inputChange} value={contact.lname}/> \r\n          </div>\r\n          \r\n     </>\r\n    )\r\n  }\r\n   \r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAER,QAAQ,CAAC;IACrCS,KAAK,EAAC,EAAE;IACRC,KAAK,EAAC;EACP,CAAC,CAAC;EAEF,SAASC,WAAWA,CAACC,KAAK,EAAC;IACxB,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAEF,KAAK,CAACG,MAAM;IACjCP,UAAU,CAACQ,SAAS,IAAE;MACpB,OAAO;QACL,GAAGA,SAAS;QACZ,CAACH,IAAI,GAAGC;MAEV,CAAC;IAEH,CAAC,CAAC;EACJ;EAGA,oBACCZ,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACAf,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAD,QAAA,eACZf,OAAA;QAAAe,QAAA,GAAI,UAAQ,EAACV,OAAO,CAACE,KAAK,EAAC,GAAC,EAACF,OAAO,CAACG,KAAK,EAAC,GAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNpB,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBf,OAAA;QAAAe,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBpB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAAEV,IAAI,EAAC,OAAO;QAACW,WAAW,EAAC,iBAAiB;QAACC,QAAQ,EAAEd,WAAY;QAACG,KAAK,EAAEP,OAAO,CAACE;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7GpB,OAAA;QAAAe,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBpB,OAAA;QAAOqB,IAAI,EAAC,UAAU;QAACV,IAAI,EAAC,OAAO;QAACW,WAAW,EAAC,iBAAiB;QAACC,QAAQ,EAAEd,WAAY;QAACG,KAAK,EAAEP,OAAO,CAACG;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/G,CAAC;EAAA,eAET,CAAC;AAEN,CAAC;AAAAhB,EAAA,CAjCGD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}