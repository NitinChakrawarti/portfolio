{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csabh\\\\Desktop\\\\TermF\\\\Nitin-s-portfolio\\\\src\\\\compo\\\\animatedprogressbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimatedProgressBar({\n  percentage\n}) {\n  _s();\n  const {\n    ref,\n    inView\n  } = useInView();\n  const controls = useAnimation();\n  useEffect(() => {\n    if (inView) {\n      controls.start({\n        width: `${percentage}%`,\n        transition: {\n          duration: 2\n        }\n      });\n    }\n  }, [controls, inView, percentage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: ref,\n      color: \"red\",\n      initial: {\n        width: 0\n      },\n      animate: controls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(AnimatedProgressBar, \"YRhVMUv0zoaRLNH/Grm7wLz2KX0=\", false, function () {\n  return [useInView, useAnimation];\n});\n_c = AnimatedProgressBar;\nvar _c;\n$RefreshReg$(_c, \"AnimatedProgressBar\");","map":{"version":3,"names":["React","useEffect","motion","useAnimation","useInView","jsxDEV","_jsxDEV","AnimatedProgressBar","percentage","_s","ref","inView","controls","start","width","transition","duration","className","children","div","color","initial","animate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/csabh/Desktop/TermF/Nitin-s-portfolio/src/compo/animatedprogressbar.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\n\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\n\r\nexport default function AnimatedProgressBar({percentage}) {\r\n    const { ref, inView } = useInView();\r\n    const controls = useAnimation();\r\n\r\n    useEffect(() => {\r\n        if (inView) {\r\n            controls.start({\r\n                width: `${percentage}%`,\r\n                transition: { duration: 2 }\r\n            });\r\n        }\r\n    }, [controls, inView, percentage]);\r\n\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <motion.div\r\n                ref={ref}\r\n                color='red'\r\n                initial={{ width: 0 }}\r\n                animate={controls}\r\n            />\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,SAASC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AACpD,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxD,eAAe,SAASC,mBAAmBA,CAAC;EAACC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EACnC,MAAMQ,QAAQ,GAAGT,YAAY,CAAC,CAAC;EAE/BF,SAAS,CAAC,MAAM;IACZ,IAAIU,MAAM,EAAE;MACRC,QAAQ,CAACC,KAAK,CAAC;QACXC,KAAK,EAAG,GAAEN,UAAW,GAAE;QACvBO,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAE;MAC9B,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACJ,QAAQ,EAAED,MAAM,EAAEH,UAAU,CAAC,CAAC;EAElC,oBACIF,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,eACzBZ,OAAA,CAACJ,MAAM,CAACiB,GAAG;MACPT,GAAG,EAAEA,GAAI;MACTU,KAAK,EAAC,KAAK;MACXC,OAAO,EAAE;QAAEP,KAAK,EAAE;MAAE,CAAE;MACtBQ,OAAO,EAAEV;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjB,EAAA,CAvBuBF,mBAAmB;EAAA,QACfH,SAAS,EAChBD,YAAY;AAAA;AAAAwB,EAAA,GAFTpB,mBAAmB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}